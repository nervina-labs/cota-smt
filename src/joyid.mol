import common;

array Byte6 [byte; 6];
array Byte9 [byte; 9];
array Byte20 [byte; 20];
array Byte24 [byte; 24];
array Byte64 [byte; 64];
vector LockScriptVec <Bytes>;


struct SubKey {
  smt_type: Uint16, 
  sub_type: Byte6,  
  ext_data: Uint32, 
  reserved: Byte20,
}
table SubValue {
  key_type: Uint16,   
  pubkey_hash: Byte20,
  reserved: Byte9,
  padding: byte,     
}
vector SubKeyVec <SubKey>;
vector SubValueVec<SubValue>;
table SubKeyEntries {
  keys: SubKeyVec,
  values: SubValueVec,
}

table SubKeyUnlockEntries {
  ext_data: Uint32,    
  key_type: Uint16,    
  subkey_proof: Bytes, 
}


struct SocialKey {
  smt_type: Uint16,  
  sub_type: Byte6,   
  reserved: Byte24,
}
table SocialValue {
  recovery_mode: byte,   
  must: byte,
  total: byte,
  signers: LockScriptVec,
}
vector SocialKeyVec <SocialKey>;
vector SocialValueVec <SocialValue>;
table SocialEntries {
  keys: SocialKeyVec,
  values: SocialValueVec,
}

vector PubkeyVec <Byte64>;
vector SignatureVec <Byte64>;
table SocialUnlockEntries {
  social_value: SocialValue, 
  social_proof: Bytes, 
  pubkeys: PubkeyVec,
  signatures: SignatureVec,
}